<template>
    <view class="content">
        <map wx:if="{{showMap}}" id="map" longitude="{{longitude}}" latitude="{{latitude}}" scale="{{scale}}" controls="{{controls}}" bindcontroltap="controltap" markers="{{markers}}" bindmarkertap="markertap" polyline="{{polyline}}" bindregionchange="regionchange" show-location style="width: 100%; height: 100%;" bindtap="bindtap" bindupdated="bindupdated">
            <cover-view class="cover" wx:if="{{cover.show}}">
                <cover-image class="img" src="{{cover.url}}" />
                <cover-view class="name">{{cover.name}}</cover-view>
            </cover-view>
        </map>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import { getFetch } from '@/modules/common/fetch'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '花瓣'
        }
        data = {
            longitude: '',
            latitude: '',
            boundary: '20',
            scale: '15',
            showMap: false,
            markers: [{
                iconPath: '../../modules/images/flower.png',
                id: 0,
                latitude: 23.099994,
                longitude: 113.324520,
                width: 30,
                height: 30
            }],
            cover: {
                show: false,
                url: '../../modules/images/flower.png',
                name: '111'
            },
            list: []
        }
        methods = {
            bindtap () {
                this.cover.show = false
            },
            bindupdated () {
                this.cover.show = false
            }
        }
        getLocation () {
            return new Promise((resolve) => {
                wepy.getLocation({
                    type: 'gcj02',
                    success: function(res) {
                        resolve(res)
                    }
                })
            })
        }
        async downloadFile (url) {
            return new Promise(resolve => {
                wepy.downloadFile({
                    url,
                    success: function(res) {
                        // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容
                        if (res.statusCode === 200) {
                            resolve('../../modules/images/flower.png')
                            // resolve(res.tempFilePath)
                        }
                        resolve('../../modules/images/flower.png')
                    }
                })
            })
        }
        async getList () {
            const res = await getFetch(`/mapList?lon=${this.longitude}&lat=${this.latitude}&boundary=${this.boundary}`, {
                noAjax: true
            })
            this.list = res
            this.$apply()
            return Promise.all(res.reduce((promiseArr, item) => {
                promiseArr.push(this.downloadFile(item.imgUrl))
                return promiseArr
            }, [])).then(result => {
                return res.reduce((arr, item, idx) => {
                    arr.push({
                        iconPath: result[idx],
                        id: item.id,
                        latitude: item.latitude + idx / 200,
                        longitude: item.longitude,
                        width: 30,
                        height: 30
                    })
                    return arr
                }, [])
            })
            // return res.reduce((previous, item, idx) => {
            //     console.log(idx)
            //     return previous.then((arr) => {
            //         return new Promise(async(resolve) => {
            //             const iconPath = await this.downloadFile(item.imgUrl)
            //             console.log(iconPath)
            //             arr.push({
            //                 iconPath,
            //                 id: item.id,
            //                 latitude: item.latitude + idx / 200,
            //                 longitude: item.longitude,
            //                 width: 30,
            //                 height: 30
            //             })
            //             resolve(arr)
            //         })
            //     })
            // }, Promise.resolve([]))
        }
        openLocation (res) {
            const { latitude, longitude } = res
            wepy.openLocation({
                latitude,
                longitude,
                scale: 28
            })
        }
        regionchange(e) {
            this.cover.show = false
            console.log(e.type)
        }
        markertap(e) {
            console.log(e)
            console.log(e.markerId)
            const plant = this.list.find((item) => item.id === e.markerId)
            const res = JSON.parse(plant.res)
            const result = Array.isArray(res) ? res : res ? [res] : []
            console.log(result)
            this.cover = {
                show: true,
                url: plant.imgUrl,
                name: result[0].result[0].name
            }
            console.log(this.cover)
        }
        controltap(e) {
            console.log(e.controlId)
        }
        async onLoad () {
            this.getLocation().then(async (res) => {
                this.longitude = res.longitude
                this.latitude = res.latitude
                this.markers = await this.getList()
                this.showMap = true
                this.$apply()
                // return this.openLocation(res)
            })
        }
    }
</script>

<style lang="scss" scoped>
    .content {
        width: 100%;
        height: 100%;
        .cover {
            // display: flex;
            // flex-direction: column;
            // justify-content: center;
            background-color: #ffffff;
            padding: 20rpx;
            position: absolute;
            text-align: center;
            top: 50%;
            left: 50%;
            width: 300rpx;
            height: 400rpx;
            margin-top: -150rpx;
            margin-left: -150rpx;
            .img {
                display: inline-block;
                width: 240rpx;
                height: 300rpx;
            }
            .name {
                color: #737373;
                margin-top: 20rpx;
                text-align: center;
            }
        }
    }
</style>
